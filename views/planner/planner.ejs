<%include ../partials/header%>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBMMJZOHCIonaJDigVJKsgPV9Y8QUFK6tA&callback=initMap"async defer>
</script>
<script src="//cdnjs.cloudflare.com/ajax/libs/Sortable/1.4.2/Sortable.min.js"></script>
<style type="text/css">
<%include plannerStyle.css%>
</style>

<script>
function initMap() {
    var ABC    =["A","B","C","D","E","F","G","H", "I","J","K"]; 
    var markers=[] ; // array for storing all of the markers  
    //google map settings
    var map = new google.maps.Map(document.getElementById('map'),{
      center: {lat: -34.397, lng: 150.644},                      
      zoom: 10
    });
    
    //function for setting markers on map
    
     //Populate User's favorites in the result Panel
     $.ajax({
        type: "GET",
        url: "/planner/favorites/show",
        data: "",
        dataType:"json",
        success: function(matchFavorites){ 
            console.log(matchFavorites)
            for(var i = 0; i<matchFavorites.length;i++){
              $("#searchResults").append(function(){
                    return  "<div class= 'resultboxes' id='"+i+"'><div>"+matchFavorites[i].name+"</div>"+
                    "<span class='glyphicon glyphicon-remove'>"+
                    "</span><span id= '"+matchFavorites[i].id+"' class='glyphicon glyphicon-plus addToDo'></span></div>"
               });
            }
        } 
    });
    
   //add favorites to schedule and save to users collections
   //when the + icon is clicked    
   $("#searchResults").on("click",".addToDo",function(){
       var newToDo = $(this).attr("id");
       $.ajax({
            type: "POST",
            url: "/planner/toDo/new",
            data: {id:newToDo},
            dataType:"json",
            success:function(schedule){
                $("#sortPanel").append(function(){
                  var scheduleLength =  $(".ToDoItems").length;
                  return toDoContents(schedule,scheduleLength);
                });
            },
       })
    });
    
    
    
    //display user's schedule in the schedule panel
    $.ajax({
        type: "GET",
        url: "/planner/schedule/show",
        data:"",
        dataType:"json",
        success:function(schedule){
           
            for( var i=0; i<schedule.length ; i++){
                $("#sortPanel").append(function(){
                  return toDoContents(schedule[i],i);
                });
            }
            

          var lat = parseFloat(schedule[0].location.coordinate.latitude);
          var long = parseFloat(schedule[0].location.coordinate.longitude);
          map.setCenter({lat: lat, lng: long});
         calculateRoutes(schedule );    
         
            
        }  
    });
    
    
    function calculateRoutes(schedule){   
        var directionsService = new google.maps.DirectionsService;
        var directionsDisplay = new google.maps.DirectionsRenderer;    
       
        var waypts = [] ;
        var originpts;
        var endpts;
               
        for( var i = 0 ; i< schedule.length ; i++){
        
            var lats    = parseFloat(schedule[i].location.coordinate.latitude);
                
            var longs   = parseFloat(schedule[i].location.coordinate.longitude);
               
            if( i == 0){
                originpts = ""+lats+","+longs+"" ;
           }else if( i == schedule.length - 1){
               endpts= ""+lats+","+longs+"";
               displayRoutes(directionsService,directionsDisplay,originpts,waypts,endpts);
            }else{  
                 waypts.push({location:""+lats+","+longs+"" , stopover: true}); 
            }
        };
    };     
    
    
    function displayRoutes(directionsService,directionsDisplay,originpts,waypts,endpts){          
        directionsService.route({
              origin: originpts,
              waypoints:waypts,
              destination: endpts,
              travelMode: 'DRIVING'
            }, function(response, status) {
              if (status === 'OK') {
                directionsDisplay.setDirections(response);
                 directionsDisplay.setMap(map);
                console.log("complete");
              } else {
                console.log('Directions request failed due to ' + status);
              }
            }      
        );
    };
    


       //allows ToDo  to be sortable on click
   $("#sortPanel").sortable({
       update:function(){
          var reorderedSchedule = $(this).sortable('toArray',{attr:'sortid'});
          $.ajax({
              type:"PUT",
              url:"/planner/schedule/edit",
              data:{id:reorderedSchedule},
              success:function(sortedSchedule){
                  sortQueryNumber(sortedSchedule);    
              }
          })
         sortQueryNumber(); 
       }
   });

    //Remove ToDo when x is clicked on the schedule panel
    $("#sortPanel").on("click",".removeToDo",function(){
        console.log("hey")
        var deleteToDo = $(this).siblings("#heading").children(".queryNumber").html();
        $this = $(this);
        console.log(deleteToDo)
          $.ajax({
              type: "DELETE",
              url:"/planner/toDo/delete",
              data:{'id':deleteToDo},
              success:function(deletedYelpData){
                   $this.parent().parent().parent().remove();
                   sortQueryNumber(deletedYelpData);
              }
         });
        });



     //function for returning toDo boxes    
     function toDoContents(toDoObject,i){
         return  "<div id='"+toDoObject.id+"'class='ToDo "+i+"'><div class='ToDoItems'>"+
                        "<span class='list-group-item'>"+
                        "<h5 class='list-group-item-heading' id='heading'><span class='queryNumber'>"+i+"</span>"+
                        "<span class='scheduleName' id='"+toDoObject.id+"'>."+toDoObject.name+"</span>"+
                        "<span>&nbsp<img src='"+toDoObject.rating_img_url+"'></img></span>"+
                        "<span id='reviews'>&nbsp"+toDoObject.review_count+"reviews</span></h5>"+
                        "<p class='snippet_text'>"+toDoObject.snippet_text+"</p><div class='glyphicon glyphicon-remove removeToDo'></div></di>"+
                        "</span><img class='locationImage'src='"+toDoObject.image_url+"'></img></div>"
     };
     
     function sortQueryNumber(yelpObject){
      $(".queryNumber").each(function(index){
          $(this).html(index)
      }); 

     };
     
     function addMarkerToMap(yelpObject,i){
        if(i == 0){
          //remove markers on map
          markMap(null);
          //clear markers on map when new search is made
          markers=[];
        } 
        //add number to markers markers on maps
        var latPos  = parseFloat(yelpObject.location.coordinate.latitude);
        var longPos = parseFloat(yelpObject.location.coordinate.longitude);
        var i       = i.toString();
        
         marker = new google.maps.Marker({
            position: {lat:latPos, lng:longPos},
            title:yelpObject.name,
            label: i,
            });    
         //load all markers in array to be displayed on google maps              
         markers.push(marker);
         markMap(map);
     }

}
</script>


<% include plannerContent.html%>
