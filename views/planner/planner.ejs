<%include ../partials/header%>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBMMJZOHCIonaJDigVJKsgPV9Y8QUFK6tA&callback=initMap"async defer>
</script>
<script src="//cdnjs.cloudflare.com/ajax/libs/Sortable/1.4.2/Sortable.min.js"></script>
<style type="text/css">
<%include plannerStyle.css%>
</style>

<script>
function initMap() {
    var ABC    =["A","B","C","D","E","F","G","H", "I","J","K"]; 
    var markers=[] ; // array for storing all of the markers  
    //google map settings
    var map = new google.maps.Map(document.getElementById('map'),{
      center: {lat: -34.397, lng: 150.644},                      
      zoom: 10
    });
    
    //function for setting markers on map
    
     //Populate User's favorites in the result Panel
     $.ajax({
        type: "GET",
        url: "/planner/favorites/show",
        data: "",
        dataType:"json",
        success: function(matchFavorites){ 
            for(var i = 0; i<matchFavorites.length;i++){
              $("#searchResults").append(function(){
                    return  "<li><div class= 'resultboxes' id='"+i+"'><div>"+matchFavorites[i].name+"</div>"+
                    "<span class='glyphicon glyphicon-remove'>"+
                    "</span><span id= '"+matchFavorites[i].id+"' class='glyphicon glyphicon-plus addToDo'></span></div></li>"
               });
            }
        } 
    });
    
   //add favorites to schedule and save to users collections
   //when the + icon is clicked    
   $("#searchResults").on("click",".addToDo",function(){
       var newToDo = $(this).attr("id");
       $.ajax({
            type: "POST",
            url: "/planner/toDo/new",
            data: {id:newToDo},
            dataType:"json",
            success:function(schedule){
                $("#sortPanel").append(function(){
                  var lastPosIndex =  $(".ToDoItems").length;
                  var newSchedule = schedule[schedule.length- 1];
                  return toDoContents(newSchedule,lastPosIndex);
                });
                console.log(schedule);
                sortQueryNumber(schedule)
            },
       })
    });
    
    
    
    //display user's schedule in the schedule panel
    $.ajax({
        type: "GET",
        url: "/planner/schedule/show",
        data:"",
        dataType:"json",
        success:function(schedule){
            for( var i=0; i<schedule.length ; i++){
                $("#sortPanel").append(function(){
                  return toDoContents(schedule[i],i);
                });
            }
         calculateRoutes(schedule);    
         calculateDistance(schedule);
        }  
    });


       //allows ToDo  to be sortable on click
   $("#sortPanel").sortable({
       update:function(){
          var reorderedSchedule = $(this).sortable('toArray',{attr:'sortid'});
          $.ajax({
              type:"PUT",
              url:"/planner/schedule/edit",
              data:{id:reorderedSchedule},
              success:function(sortedSchedule){
                  console.log(sortedSchedule);
                  sortQueryNumber(sortedSchedule);    
              }
          })
      
       }
   });

    //Remove ToDo when x is clicked on the schedule panel
    $("#sortPanel").on("click",".removeToDo",function(){
        var deleteToDo = $(this).siblings("#heading").children(".queryNumber").html();
        $this = $(this);
          $.ajax({
              type: "DELETE",
              url:"/planner/toDo/delete",
              data:{'id':deleteToDo},
              success:function(deletedYelpData){
                   $this.parent().parent().parent().remove();
                   console.log(deletedYelpData);
                   sortQueryNumber(deletedYelpData);
              }
         });
        });


     //function for returning toDo boxes    
     function toDoContents(toDoObject,i){
         console.log(toDoObject);
         return  "<div id='"+toDoObject.id+"'class='ToDo "+i+"'><div class='ToDoItems'><img class='locationImage'src='"+toDoObject.image_url+"'></img>"+
                        "<div class='list-group-item'>"+
                        "<h5 class='list-group-item-heading' id='heading'><span class='queryNumber'>"+i+"</span>"+
                        "<span class='scheduleName' id='"+toDoObject.id+"'>.<a href='"+toDoObject.url+"'>"+toDoObject.name+"</a></span>"+
                        "<span id='reviews'><img src='"+toDoObject.rating_img_url+"'></img>&nbsp"+toDoObject.review_count+"reviews</span></h5>"+
                        "<p class='snippet_text'>"+toDoObject.snippet_text+"</p><div class='glyphicon glyphicon-remove removeToDo'></div></di>"+
                        "</div><div class='distance'></div></div>"
     };
     
     
     function sortQueryNumber(yelpObject){
      $(".queryNumber").each(function(index){
          $(this).html(index)
      });
      calculateRoutes(yelpObject);
      calculateDistance(yelpObject);
     };
     
     
     
     function calculateDistance(schedule){
        var origin=[];//store all the LatLng of locations in odd index
        var destination=[];//store all the LatLng of locations in even index
        var service = new google.maps.DistanceMatrixService();//google maps distance API
     
        for(var i = 0 ; i<schedule.length ; i++ ){
           var lat = schedule[i].location.coordinate.latitude;
           var long = schedule[i].location.coordinate.longitude;
               origin.push(""+lat+","+long+"");
               destination.push(""+lat+","+long+"");
        }  

        //Request distance through Google's API
        service.getDistanceMatrix(
          {
            origins: origin,
            destinations: destination,
            travelMode: 'DRIVING',
            unitSystem: google.maps.UnitSystem.IMPERIAL,
          }, function(response,status){
        //process recieved Data
            if(status=="OK"){
                var distancesArr = [];
                for(var i = 0 ; i<schedule.length - 1; i++){
                  var distanceTravel = response.rows[i].elements[i+ 1].distance.text;
                  var durationTravel = response.rows[i].elements[i+ 1].duration.text;
                  distanceObj = { "distance": distanceTravel,
                                  "duration": durationTravel
                                };
                  distancesArr.push(distanceObj);
                };
                
                $(".distance").each(function(index){
                  console.log(index);
                  console.log(distancesArr)
                  $(this).html(
                      "<div class='miles'><span class='glyphicon glyphicon-chevron-right'></span>"+
                      "<span>&nbsp&nbsp"+distancesArr[index].distance+"</span></div>"+
                      "<"+
                      "<div class='time'><span class='glyphicon glyphicon-time'></span>"+
                      "<span>&nbsp&nbsp"+distancesArr[index].duration+"</span</div>"
                  )
              });
            }else{
                console.log(err)
            }
          });
    }
    
    
    function calculateRoutes(schedule){   
        console.log(schedule);
        var directionsService = new google.maps.DirectionsService;
        var directionsDisplay = new google.maps.DirectionsRenderer;
        var waypts = [] ;
        var originpts;
        var endpts;
        
        for( var i = 0 ; i< schedule.length ; i++){
            var lats    = schedule[i].location.coordinate.latitude;
            var longs   = schedule[i].location.coordinate.longitude;
            if( i == 0){
                originpts = ""+lats+","+longs+"" ;
           }else if( i == schedule.length - 1){
               endpts= ""+lats+","+longs+"";
               displayRoutes(directionsService,directionsDisplay,originpts,waypts,endpts);
            }else{  
                 waypts.push({location:""+lats+","+longs+"" , stopover: true}); 
            }
        };
    };     
    
    
    function displayRoutes(directionsService,directionsDisplay,originpts,waypts,endpts){  
        
        directionsService.route({
             
              origin: originpts,
              waypoints:waypts,
              destination: endpts,
              travelMode: 'DRIVING'
              
            }, function(response, status) {
              
              if (status === 'OK') {
               map ="";
               map =new google.maps.Map(document.getElementById('map'),{
                      center: {lat: -34.397, lng: 150.644},                      
                      zoom: 10
                        });
                 directionsDisplay.setDirections(response);
                 directionsDisplay.setMap(map);
                 //remove current direction from directionsText element
                 //and replace with new directions
                 document.getElementById("directionsText").innerHTML="";
                 directionsDisplay.setPanel(document.getElementById("directionsText"));
             
              } else {
                console.log('Directions request failed due to ' + status);
              }
            }      
        );
    };
    
    
     function addMarkerToMap(yelpObject,i){
        if(i == 0){
          //remove markers on map
          markMap(null);
          //clear markers on map when new search is made
          markers=[];
        } 
        //add number to markers markers on maps
        var latPos  = parseFloat(yelpObject.location.coordinate.latitude);
        var longPos = parseFloat(yelpObject.location.coordinate.longitude);
        var i       = i.toString();
         marker = new google.maps.Marker({
            position: {lat:latPos, lng:longPos},
            title:yelpObject.name,
            label: i,
            });    
         //load all markers in array to be displayed on google maps              
         markers.push(marker);
         markMap(map);
     }

}

</script>


<% include plannerContent.html%>
